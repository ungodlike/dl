import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the uploaded image
uploaded_image = cv2.imread('image.jpeg')

# 1. Box Blur Filter (Kernel Size: 9x9)
box_blur = cv2.blur(uploaded_image, (9, 9))
cv2.imwrite('box_blur.jpg', box_blur)

# 2. Color Inversion Filter
inverted_image = cv2.bitwise_not(uploaded_image)
cv2.imwrite('inverted_image.jpg', inverted_image)

# 3. Sepia Filter
sepia_filter = np.array([[0.272, 0.534, 0.131],
                         [0.349, 0.686, 0.168],
                         [0.393, 0.769, 0.189]])
sepia_image = cv2.transform(uploaded_image, sepia_filter.T)
sepia_image = sepia_image.clip(0, 255).astype(np.uint8)
cv2.imwrite('sepia_image.jpg', sepia_image)

# 4. Cartoonization Filter
gray_image = cv2.cvtColor(uploaded_image, cv2.COLOR_BGR2GRAY)
gray_blur = cv2.medianBlur(gray_image, 7)
edges = cv2.adaptiveThreshold(gray_blur, 255, cv2.ADAPTIVE_THRESH_MEAN_C, 
                              cv2.THRESH_BINARY, 9, 2)
cartoon = cv2.bitwise_and(uploaded_image, uploaded_image, mask=edges)
cv2.imwrite('cartoon_image.jpg', cartoon)

# 5. Emboss Filter
kernel_emboss = np.array([[0, -1, -1],
                          [1, 0, -1],
                          [1, 1, 0]])
emboss_image = cv2.filter2D(uploaded_image, -1, kernel_emboss)
cv2.imwrite('emboss_image.jpg', emboss_image)

# Display the original and filtered images using matplotlib
plt.figure(figsize=(10, 10))

plt.subplot(3, 3, 1)
plt.imshow(cv2.cvtColor(uploaded_image, cv2.COLOR_BGR2RGB))
plt.title('Original Image')
plt.axis('off')

plt.subplot(3, 3, 2)
plt.imshow(cv2.cvtColor(box_blur, cv2.COLOR_BGR2RGB))
plt.title('Box Blur Filter')
plt.axis('off')

plt.subplot(3, 3, 3)
plt.imshow(cv2.cvtColor(inverted_image, cv2.COLOR_BGR2RGB))
plt.title('Color Inversion Filter')
plt.axis('off')

plt.subplot(3, 3, 4)
plt.imshow(cv2.cvtColor(sepia_image, cv2.COLOR_BGR2RGB))
plt.title('Sepia Filter')
plt.axis('off')

plt.subplot(3, 3, 5)
plt.imshow(edges, cmap='gray')
plt.title('Cartoonization Filter')
plt.axis('off')

plt.subplot(3, 3, 6)
plt.imshow(cv2.cvtColor(emboss_image, cv2.COLOR_BGR2RGB))
plt.title('Emboss Filter')
plt.axis('off')

plt.tight_layout()
plt.show()
